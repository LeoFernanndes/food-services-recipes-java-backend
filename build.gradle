plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.flywaydb.flyway" version "8.2.2"
	id "co.uzzu.dotenv.gradle" version "3.0.0"
}

group = 'com.food-services'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	runtimeOnly 'org.postgresql:postgresql'
}

Properties properties = new Properties()
def propertiesFile = project.rootProject.file('src/main/resources/application.properties')
if (propertiesFile.exists()) {
	properties.load(propertiesFile.newDataInputStream())
}

flyway {
	url = 'jdbc:postgresql://' + env.DATABASE_HOST.orElse("host") + ':' + env.DATABASE_PORT.orElse("port") + '/' + env.DATABASE.orElse("database")
	user = env.DATABASE_USERNAME.orElse("user")
	password = env.DATABASE_PASSWORD.orElse("password")
	table = 'db_migrations'
//	TODO: Understand why classpath works in application.properties but does not work here
//	locations = 'classpath:db/migration/postgresql'
	baselineOnMigrate = true
}

tasks.named('test') {
	useJUnitPlatform()
}